trigger:
  - master

jobs:
# - job: linux_Swift_5_0
#   pool:
#     vmImage: 'Ubuntu 16.04'
#   container: swift:5.0
#   steps:
#     - script: swift test -c release -Xswiftc -enable-testing
#       displayName: Linux Swift 5.0

- job: macOS_10_13
  pool:
    vmImage: 'macOS 10.13'
  variables:
    DEVELOPER_DIR: /Applications/Xcode_10.1.app
  steps:
    - script: >
        set -o pipefail &&
        xcodebuild test -destination 'platform=macOS,arch=x86_64' -scheme "ZIPFoundation" |
        xcpretty -r junit -o build/reports/xcodebuild-macOS.xml
      displayName: macOS Swfit 4.2

- job: iOS_12_1
  pool:
    vmImage: 'macOS 10.13'
  variables:
    DEVELOPER_DIR: /Applications/Xcode_10.1.app
  steps:
    - script: >
        set -o pipefail &&
        xcodebuild test -sdk iphonesimulator -destination "name=iPhone X" -scheme "ZIPFoundation" |
        xcpretty -r junit -o build/reports/xcodebuild-iOS.xml
      displayName: iOS Swfit 4.2

- job: watchOS_5_1
  pool:
    vmImage: 'macOS 10.13'
  variables:
    DEVELOPER_DIR: /Applications/Xcode_10.1.app
  steps:
    # We currently only perform a build-only script for watchOS (xcodebuild test is unable to find the XCTest module)
    - script: >
        set -o pipefail &&
        xcodebuild build -sdk watchsimulator -destination "name=Apple Watch Series 3 - 38mm" -scheme "ZIPFoundation" |
        xcpretty -r junit -o build/reports/xcodebuild-watchOS.xml
      displayName: watchOS Swfit 4.2

- job: tvOS_12_1
  pool:
    vmImage: 'macOS 10.13'
  variables:
    DEVELOPER_DIR: /Applications/Xcode_10.1.app
  steps:
    - script: >
        set -o pipefail &&
        xcodebuild test -sdk appletvsimulator -destination "name=Apple TV 4K" -scheme "ZIPFoundation" |
        xcpretty -r junit -o build/reports/xcodebuild-tvOS.xml
      displayName: tvOS Swfit 4.2

- job: SwiftLint
  pool:
    vmImage: 'macOS 10.13'
  variables:
    DEVELOPER_DIR: /Applications/Xcode_10.1.app
  steps:
    - script: xcodebuild -scheme ZIPFoundation clean build-for-testing > xcodebuild.log
      displayName: Generate xcodebuild.log
    - script: HOMEBREW_NO_AUTO_UPDATE=1 brew install https://raw.github.com/Homebrew/homebrew-core/master/Formula/swiftlint.rb
      displayName: Install SwiftLint
    - script: swiftlint
      displayName: SwiftLint	  
    - script: swiftlint analyze --strict --compiler-log-path xcodebuild.log
      displayName: SwiftLint Analyze

- job: CodeCoverage
  pool:
    vmImage: 'macOS 10.13'
  variables:
    DEVELOPER_DIR: /Applications/Xcode_10.1.app
  steps:
    - script: xcodebuild test -destination 'platform=macOS,arch=x86_64' -scheme "ZIPFoundation" -derivedDataPath Build/ 
      displayName: Generate xccovreport
    - script: (xcrun xccov view --only-targets Build/Logs/Test/*.xcresult/*_Test/action.xccovreport | grep -Eq  "ZIPFoundation.*100\.00%") && (exit 0) || (exit 1)
      displayName: Check for 100% coverage