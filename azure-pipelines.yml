# Xcode
# Build, test, and archive an Xcode workspace on macOS.
# Add steps that install certificates, test, sign, and distribute an app, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/xcode

trigger:
  - master

jobs:
# - job: linuxSwift50
#   pool:
#     vmImage: 'Ubuntu 16.04'
#   container: swift:5.0
#   steps:
#     - script: swift test -c release -Xswiftc -enable-testing
#       displayName: Linux Swift 5.0

- job: macOS_10_13
  pool:
    vmImage: 'macOS 10.13'
  variables:
    DEVELOPER_DIR: /Applications/Xcode_10.1.app
  steps:
    - script: >
        set -o pipefail &&
        xcodebuild test -destination 'platform=macOS,arch=x86_64' -scheme "ZIPFoundation" |
        xcpretty -r junit -o build/reports/xcodebuild-macOS.xml
      displayName: macOS Swfit 4.2

- job: iOS_12_1
  pool:
    vmImage: 'macOS 10.13'
  variables:
    DEVELOPER_DIR: /Applications/Xcode_10.1.app
  steps:
    - script: >
        set -o pipefail &&
        xcodebuild test -sdk iphonesimulator -destination "name=iPhone X" -scheme "ZIPFoundation" |
        xcpretty -r junit -o build/reports/xcodebuild-iOS.xml
      displayName: iOS Swfit 4.2

- job: watchOS_5_1
  pool:
    vmImage: 'macOS 10.13'
  variables:
    DEVELOPER_DIR: /Applications/Xcode_10.1.app
  steps:
    - script: >
        set -o pipefail &&
        xcodebuild build -sdk watchsimulator -destination "name=Apple Watch Series 3 - 38mm" -scheme "ZIPFoundation" |
        xcpretty -r junit -o build/reports/xcodebuild-watchOS.xml
      displayName: watchOS Swfit 4.2
